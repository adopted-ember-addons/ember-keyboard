{"version":3,"file":"index.js","sources":["../../../src/index.ts"],"sourcesContent":["import {\n  Namespace,\n  SerializableAttr,\n  SerializableAttrs,\n  SerializableElement,\n  SerializableNode,\n} from '@simple-dom/interface';\n\nconst ESC: {\n  [char: string]: string;\n} = {\n  '\"': '&quot;',\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n};\n\nfunction matcher(char: string) {\n  return ESC[char];\n}\n\nfunction toLowerCase(name: string) {\n  return name === 'DIV' ? 'div' : name === 'SPAN' ? 'span' : name.toLowerCase();\n}\n\nexport default class HTMLSerializer {\n  constructor(private voidMap: {\n    [tagName: string]: boolean,\n  }) {\n  }\n\n  public openTag(element: SerializableElement) {\n    return '<' + this.tagName(element) + this.attributes(element.attributes) + '>';\n  }\n\n  public closeTag(element: SerializableElement) {\n    return '</' + this.tagName(element) + '>';\n  }\n\n  public tagName(element: SerializableElement) {\n    return element.namespaceURI === Namespace.HTML ? toLowerCase(element.nodeName) : element.nodeName;\n  }\n\n  public isVoid(element: SerializableElement) {\n    return this.voidMap[element.nodeName] === true;\n  }\n\n  public attributes(attributes: SerializableAttrs) {\n    let buffer = '';\n    for (let i = 0, l = attributes.length; i < l; i++) {\n      buffer += this.attr(attributes[i]);\n    }\n    return buffer;\n  }\n\n  public escapeAttrValue(attrValue: string) {\n    if (attrValue.indexOf('&') > -1 || attrValue.indexOf('\"') > -1) {\n      return attrValue.replace(/[&\"]/g, matcher);\n    }\n\n    return attrValue;\n  }\n\n  public attr(attr: SerializableAttr) {\n    if (!attr.specified) {\n      return '';\n    }\n    if (attr.value) {\n      return ' ' + attr.name + '=\"' + this.escapeAttrValue(attr.value) + '\"';\n    }\n    return ' ' + attr.name;\n  }\n\n  public escapeText(textNodeValue: string) {\n    if (textNodeValue.indexOf('>') > -1 ||\n        textNodeValue.indexOf('<') > -1 ||\n        textNodeValue.indexOf('&') > -1\n    ) {\n      return textNodeValue.replace(/[&<>]/g, matcher);\n    }\n\n    return textNodeValue;\n  }\n\n  public text(text: SerializableNode) {\n    return this.escapeText(text.nodeValue!);\n  }\n\n  public rawHTMLSection(text: SerializableNode): string {\n    return text.nodeValue!;\n  }\n\n  public comment(comment: SerializableNode) {\n    return '<!--' + comment.nodeValue + '-->';\n  }\n\n  public serializeChildren(node: SerializableNode) {\n    let buffer = '';\n    let next = node.firstChild;\n    while (next !== null) {\n      buffer += this.serialize(next);\n      next = next.nextSibling;\n    }\n    return buffer;\n  }\n\n  public serialize(node: SerializableNode) {\n    let buffer = '';\n\n    // open\n    switch (node.nodeType) {\n      case 1:\n        buffer += this.openTag(node as SerializableElement);\n        break;\n      case 3:\n        buffer += this.text(node);\n        break;\n      case -1:\n        buffer += this.rawHTMLSection(node);\n        break;\n      case 8:\n        buffer += this.comment(node);\n        break;\n      default:\n        break;\n    }\n\n    buffer += this.serializeChildren(node);\n\n    if (node.nodeType === 1 && !this.isVoid(node as SerializableElement)) {\n      buffer += this.closeTag(node as SerializableElement);\n    }\n\n    return buffer;\n  }\n}\n"],"names":["const","attributes","let","this","attr","text","comment"],"mappings":"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"}