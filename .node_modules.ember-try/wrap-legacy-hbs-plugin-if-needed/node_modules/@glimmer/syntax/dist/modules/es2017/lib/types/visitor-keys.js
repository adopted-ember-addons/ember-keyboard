import { tuple } from '@glimmer/util';
// ensure stays in sync with typing
// ParentNode and ChildKey types are derived from VisitorKeysMap
const visitorKeys = {
    Program: tuple('body'),
    Template: tuple('body'),
    Block: tuple('body'),
    MustacheStatement: tuple('path', 'params', 'hash'),
    BlockStatement: tuple('path', 'params', 'hash', 'program', 'inverse'),
    ElementModifierStatement: tuple('path', 'params', 'hash'),
    PartialStatement: tuple('name', 'params', 'hash'),
    CommentStatement: tuple(),
    MustacheCommentStatement: tuple(),
    ElementNode: tuple('attributes', 'modifiers', 'children', 'comments'),
    AttrNode: tuple('value'),
    TextNode: tuple(),
    ConcatStatement: tuple('parts'),
    SubExpression: tuple('path', 'params', 'hash'),
    PathExpression: tuple(),
    StringLiteral: tuple(),
    BooleanLiteral: tuple(),
    NumberLiteral: tuple(),
    NullLiteral: tuple(),
    UndefinedLiteral: tuple(),
    Hash: tuple('pairs'),
    HashPair: tuple('value')
};
export default visitorKeys;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3N5bnRheC9saWIvdHlwZXMvdmlzaXRvci1rZXlzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsS0FBVCxRQUFzQixlQUF0QjtBQUdBO0FBQ0E7QUFDQSxNQUFNLGNBQWM7QUFDbEIsYUFBUyxNQUFNLE1BQU4sQ0FEUztBQUVsQixjQUFVLE1BQU0sTUFBTixDQUZRO0FBR2xCLFdBQU8sTUFBTSxNQUFOLENBSFc7QUFLbEIsdUJBQW1CLE1BQU0sTUFBTixFQUFjLFFBQWQsRUFBd0IsTUFBeEIsQ0FMRDtBQU1sQixvQkFBZ0IsTUFBTSxNQUFOLEVBQWMsUUFBZCxFQUF3QixNQUF4QixFQUFnQyxTQUFoQyxFQUEyQyxTQUEzQyxDQU5FO0FBT2xCLDhCQUEwQixNQUFNLE1BQU4sRUFBYyxRQUFkLEVBQXdCLE1BQXhCLENBUFI7QUFRbEIsc0JBQWtCLE1BQU0sTUFBTixFQUFjLFFBQWQsRUFBd0IsTUFBeEIsQ0FSQTtBQVNsQixzQkFBa0IsT0FUQTtBQVVsQiw4QkFBMEIsT0FWUjtBQVdsQixpQkFBYSxNQUFNLFlBQU4sRUFBb0IsV0FBcEIsRUFBaUMsVUFBakMsRUFBNkMsVUFBN0MsQ0FYSztBQVlsQixjQUFVLE1BQU0sT0FBTixDQVpRO0FBYWxCLGNBQVUsT0FiUTtBQWVsQixxQkFBaUIsTUFBTSxPQUFOLENBZkM7QUFnQmxCLG1CQUFlLE1BQU0sTUFBTixFQUFjLFFBQWQsRUFBd0IsTUFBeEIsQ0FoQkc7QUFpQmxCLG9CQUFnQixPQWpCRTtBQW1CbEIsbUJBQWUsT0FuQkc7QUFvQmxCLG9CQUFnQixPQXBCRTtBQXFCbEIsbUJBQWUsT0FyQkc7QUFzQmxCLGlCQUFhLE9BdEJLO0FBdUJsQixzQkFBa0IsT0F2QkE7QUF5QmxCLFVBQU0sTUFBTSxPQUFOLENBekJZO0FBMEJsQixjQUFVLE1BQU0sT0FBTjtBQTFCUSxDQUFwQjtBQWtDQSxlQUFlLFdBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0dXBsZSB9IGZyb20gJ0BnbGltbWVyL3V0aWwnO1xuaW1wb3J0ICogYXMgQVNUIGZyb20gJy4uL3R5cGVzL25vZGVzJztcblxuLy8gZW5zdXJlIHN0YXlzIGluIHN5bmMgd2l0aCB0eXBpbmdcbi8vIFBhcmVudE5vZGUgYW5kIENoaWxkS2V5IHR5cGVzIGFyZSBkZXJpdmVkIGZyb20gVmlzaXRvcktleXNNYXBcbmNvbnN0IHZpc2l0b3JLZXlzID0ge1xuICBQcm9ncmFtOiB0dXBsZSgnYm9keScpLFxuICBUZW1wbGF0ZTogdHVwbGUoJ2JvZHknKSxcbiAgQmxvY2s6IHR1cGxlKCdib2R5JyksXG5cbiAgTXVzdGFjaGVTdGF0ZW1lbnQ6IHR1cGxlKCdwYXRoJywgJ3BhcmFtcycsICdoYXNoJyksXG4gIEJsb2NrU3RhdGVtZW50OiB0dXBsZSgncGF0aCcsICdwYXJhbXMnLCAnaGFzaCcsICdwcm9ncmFtJywgJ2ludmVyc2UnKSxcbiAgRWxlbWVudE1vZGlmaWVyU3RhdGVtZW50OiB0dXBsZSgncGF0aCcsICdwYXJhbXMnLCAnaGFzaCcpLFxuICBQYXJ0aWFsU3RhdGVtZW50OiB0dXBsZSgnbmFtZScsICdwYXJhbXMnLCAnaGFzaCcpLFxuICBDb21tZW50U3RhdGVtZW50OiB0dXBsZSgpLFxuICBNdXN0YWNoZUNvbW1lbnRTdGF0ZW1lbnQ6IHR1cGxlKCksXG4gIEVsZW1lbnROb2RlOiB0dXBsZSgnYXR0cmlidXRlcycsICdtb2RpZmllcnMnLCAnY2hpbGRyZW4nLCAnY29tbWVudHMnKSxcbiAgQXR0ck5vZGU6IHR1cGxlKCd2YWx1ZScpLFxuICBUZXh0Tm9kZTogdHVwbGUoKSxcblxuICBDb25jYXRTdGF0ZW1lbnQ6IHR1cGxlKCdwYXJ0cycpLFxuICBTdWJFeHByZXNzaW9uOiB0dXBsZSgncGF0aCcsICdwYXJhbXMnLCAnaGFzaCcpLFxuICBQYXRoRXhwcmVzc2lvbjogdHVwbGUoKSxcblxuICBTdHJpbmdMaXRlcmFsOiB0dXBsZSgpLFxuICBCb29sZWFuTGl0ZXJhbDogdHVwbGUoKSxcbiAgTnVtYmVyTGl0ZXJhbDogdHVwbGUoKSxcbiAgTnVsbExpdGVyYWw6IHR1cGxlKCksXG4gIFVuZGVmaW5lZExpdGVyYWw6IHR1cGxlKCksXG5cbiAgSGFzaDogdHVwbGUoJ3BhaXJzJyksXG4gIEhhc2hQYWlyOiB0dXBsZSgndmFsdWUnKSxcbn07XG5cbnR5cGUgVmlzaXRvcktleXNNYXAgPSB0eXBlb2YgdmlzaXRvcktleXM7XG5cbmV4cG9ydCB0eXBlIFZpc2l0b3JLZXlzID0geyBbUCBpbiBrZXlvZiBWaXNpdG9yS2V5c01hcF06IFZpc2l0b3JLZXlzTWFwW1BdW251bWJlcl0gfTtcbmV4cG9ydCB0eXBlIFZpc2l0b3JLZXk8TiBleHRlbmRzIEFTVC5Ob2RlPiA9IFZpc2l0b3JLZXlzW05bJ3R5cGUnXV0gJiBrZXlvZiBOO1xuXG5leHBvcnQgZGVmYXVsdCB2aXNpdG9yS2V5cztcbiJdLCJzb3VyY2VSb290IjoiIn0=