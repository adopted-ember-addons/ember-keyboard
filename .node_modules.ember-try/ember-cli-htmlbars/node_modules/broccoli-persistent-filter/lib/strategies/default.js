"use strict";
const Dependencies = require("../dependencies");
const assertNever_1 = require("../util/assertNever");
const DefaultStrategy = {
    init() { },
    async processString(ctx, contents, relativePath) {
        let output = await ctx.processString(contents, relativePath);
        let normalizedValue;
        if (typeof output === 'string') {
            normalizedValue = { output };
        }
        else {
            normalizedValue = output;
        }
        let result = await ctx.postProcess(normalizedValue, relativePath);
        if (result === undefined) {
            assertNever_1.default(result, 'You must return an object from `Filter.prototype.postProcess`.');
        }
        return result.output;
    },
    /**
     * By default initial dependencies are empty.
     */
    initialDependencies(rootFS, inputEncoding) {
        // Dependencies start out empty and sealed as if they came from
        // the previous build iteration.
        return (new Dependencies(rootFS, inputEncoding)).seal().captureDependencyState();
    },
    /**
     * Seals the dependencies and captures the dependency state.
     * @param dependencies {Dependencies} The dependencies to seal.
     */
    sealDependencies(dependencies) {
        dependencies.seal().captureDependencyState();
    }
};
module.exports = DefaultStrategy;
//# sourceMappingURL=default.js.map