"use strict";
const fs = require("fs");
const path_1 = require("path");
const logger = require('heimdalljs-logger')('broccoli:outputWrapper');
const WHITELISTEDOPERATION = new Set([
    'readFileSync',
    'existsSync',
    'lstatSync',
    'readdirSync',
    'statSync',
    'writeFileSync',
    'appendFileSync',
    'rmdirSync',
    'mkdirSync'
]);
function handleFs(target, propertyName, node, relativePath, ...fsArguments) {
    if (path_1.isAbsolute(relativePath)) {
        throw new Error(`Relative path is expected, path ${relativePath} is an absolute path.`);
    }
    let outputPath = path_1.resolve(node.outputPath + '/' + relativePath);
    if (!outputPath.includes(node.outputPath)) {
        throw new Error(`Traversing above the outputPath is not allowed. Relative path ${relativePath} traverses beyond ${node.outputPath}`);
    }
    if (WHITELISTEDOPERATION.has(propertyName)) {
        logger.debug(`[operation:${propertyName}] at ${outputPath}`);
        return target[propertyName](outputPath, ...fsArguments);
    }
    else {
        throw new Error(`Operation ${propertyName} is not allowed to use. Allowed operations are ${Array.from(WHITELISTEDOPERATION).toString()}`);
    }
}
function outputWrapper(node) {
    return new Proxy(fs, {
        get(target, propertyName) {
            return handleFs.bind(this, target, propertyName, node);
        }
    });
}
module.exports = outputWrapper;
//# sourceMappingURL=index.js.map