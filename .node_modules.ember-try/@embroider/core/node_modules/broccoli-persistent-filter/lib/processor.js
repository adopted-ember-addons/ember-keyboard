"use strict";
const defaultProcessor = require("./strategies/default");
class Processor {
    constructor(options) {
        options = options || {};
        this.processor = defaultProcessor;
        this.persistent = !!options.persist;
    }
    setStrategy(stringProcessor) {
        this.processor = stringProcessor;
    }
    init(ctx) {
        this.processor.init(ctx);
    }
    processString(ctx, contents, relativePath, forceInvalidation, instrumentation) {
        return this.processor.processString(ctx, contents, relativePath, forceInvalidation, instrumentation);
    }
    /**
     * Create the initial dependencies.
     * @param options options is used to pass the custom fs operations implementations
     */
    initialDependencies(rootFS, inputEncoding) {
        return this.processor.initialDependencies(rootFS, inputEncoding);
    }
    /**
     * Seals the dependencies and captures the dependency state.
     * May cache the dependency information for the next process.
     * @param dependencies {Parameters<typeof defaultProcessor['sealDependencies']>[0]} The dependencies to seal.
     * @returns {void}
     */
    sealDependencies(dependencies) {
        this.processor.sealDependencies(dependencies);
    }
}
module.exports = Processor;
//# sourceMappingURL=processor.js.map