export class Stack {
    constructor(vec = []) {
        this.vec = vec;
    }
    clone() {
        return new Stack(this.vec.slice());
    }
    sliceFrom(start) {
        return new Stack(this.vec.slice(start));
    }
    slice(start, end) {
        return new Stack(this.vec.slice(start, end));
    }
    copy(from, to) {
        this.vec[to] = this.vec[from];
    }
    // TODO: how to model u64 argument?
    writeRaw(pos, value) {
        // TODO: Grow?
        this.vec[pos] = value;
    }
    // TODO: partially decoded enum?
    getRaw(pos) {
        return this.vec[pos];
    }
    reset() {
        this.vec.length = 0;
    }
    len() {
        return this.vec.length;
    }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL2xvdy1sZXZlbC9saWIvYXNtL3N0YWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJPQUlNLE1BQU8sS0FBUCxDQUFZO0FBQ2hCLGdCQUFvQixNQUFhLEVBQWpDLEVBQW1DO0FBQWYsYUFBQSxHQUFBLEdBQUEsR0FBQTtBQUFtQjtBQUV2QyxZQUFLO0FBQ0gsZUFBTyxJQUFJLEtBQUosQ0FBVSxLQUFLLEdBQUwsQ0FBUyxLQUFULEVBQVYsQ0FBUDtBQUNEO0FBRUQsY0FBVSxLQUFWLEVBQW9CO0FBQ2xCLGVBQU8sSUFBSSxLQUFKLENBQVUsS0FBSyxHQUFMLENBQVMsS0FBVCxDQUFlLEtBQWYsQ0FBVixDQUFQO0FBQ0Q7QUFFRCxVQUFNLEtBQU4sRUFBa0IsR0FBbEIsRUFBMEI7QUFDeEIsZUFBTyxJQUFJLEtBQUosQ0FBVSxLQUFLLEdBQUwsQ0FBUyxLQUFULENBQWUsS0FBZixFQUFzQixHQUF0QixDQUFWLENBQVA7QUFDRDtBQUVELFNBQUssSUFBTCxFQUFnQixFQUFoQixFQUF1QjtBQUNyQixhQUFLLEdBQUwsQ0FBUyxFQUFULElBQWUsS0FBSyxHQUFMLENBQVMsSUFBVCxDQUFmO0FBQ0Q7QUFFRDtBQUNBLGFBQVMsR0FBVCxFQUFtQixLQUFuQixFQUE2QjtBQUMzQjtBQUNBLGFBQUssR0FBTCxDQUFTLEdBQVQsSUFBZ0IsS0FBaEI7QUFDRDtBQUVEO0FBQ0EsV0FBTyxHQUFQLEVBQWU7QUFDYixlQUFPLEtBQUssR0FBTCxDQUFTLEdBQVQsQ0FBUDtBQUNEO0FBRUQsWUFBSztBQUNILGFBQUssR0FBTCxDQUFTLE1BQVQsR0FBa0IsQ0FBbEI7QUFDRDtBQUVELFVBQUc7QUFDRCxlQUFPLEtBQUssR0FBTCxDQUFTLE1BQWhCO0FBQ0Q7QUFwQ2UiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdHlwZSB1NjQgPSBudW1iZXI7XG5leHBvcnQgdHlwZSB1MzIgPSBudW1iZXI7XG5leHBvcnQgdHlwZSBpMzIgPSBudW1iZXI7XG5cbmV4cG9ydCBjbGFzcyBTdGFjayB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdmVjOiB1NjRbXSA9IFtdKSB7fVxuXG4gIGNsb25lKCk6IFN0YWNrIHtcbiAgICByZXR1cm4gbmV3IFN0YWNrKHRoaXMudmVjLnNsaWNlKCkpO1xuICB9XG5cbiAgc2xpY2VGcm9tKHN0YXJ0OiB1MzIpOiBTdGFjayB7XG4gICAgcmV0dXJuIG5ldyBTdGFjayh0aGlzLnZlYy5zbGljZShzdGFydCkpO1xuICB9XG5cbiAgc2xpY2Uoc3RhcnQ6IHUzMiwgZW5kOiBpMzIpOiBTdGFjayB7XG4gICAgcmV0dXJuIG5ldyBTdGFjayh0aGlzLnZlYy5zbGljZShzdGFydCwgZW5kKSk7XG4gIH1cblxuICBjb3B5KGZyb206IHUzMiwgdG86IHUzMikge1xuICAgIHRoaXMudmVjW3RvXSA9IHRoaXMudmVjW2Zyb21dO1xuICB9XG5cbiAgLy8gVE9ETzogaG93IHRvIG1vZGVsIHU2NCBhcmd1bWVudD9cbiAgd3JpdGVSYXcocG9zOiB1MzIsIHZhbHVlOiB1NjQpOiB2b2lkIHtcbiAgICAvLyBUT0RPOiBHcm93P1xuICAgIHRoaXMudmVjW3Bvc10gPSB2YWx1ZTtcbiAgfVxuXG4gIC8vIFRPRE86IHBhcnRpYWxseSBkZWNvZGVkIGVudW0/XG4gIGdldFJhdyhwb3M6IHUzMik6IHUzMiB7XG4gICAgcmV0dXJuIHRoaXMudmVjW3Bvc107XG4gIH1cblxuICByZXNldCgpOiB2b2lkIHtcbiAgICB0aGlzLnZlYy5sZW5ndGggPSAwO1xuICB9XG5cbiAgbGVuKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMudmVjLmxlbmd0aDtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZW51bSBQcmltaXRpdmVUeXBlIHtcbiAgTlVNQkVSID0gMGIwMDAsXG4gIEZMT0FUID0gMGIwMDEsXG4gIFNUUklORyA9IDBiMDEwLFxuICBCT09MRUFOX09SX1ZPSUQgPSAwYjAxMSxcbiAgTkVHQVRJVkUgPSAwYjEwMCxcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=