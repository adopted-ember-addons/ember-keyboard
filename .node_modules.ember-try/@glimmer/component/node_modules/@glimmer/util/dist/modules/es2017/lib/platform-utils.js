export function keys(obj) {
    return Object.keys(obj);
}
export function unwrap(val) {
    if (val === null || val === undefined) throw new Error(`Expected value to be present`);
    return val;
}
export function expect(val, message) {
    if (val === null || val === undefined) throw new Error(message);
    return val;
}
export function unreachable(message = 'unreachable') {
    return new Error(message);
}
export function exhausted(value) {
    throw new Error(`Exhausted ${value}`);
}
export const tuple = (...args) => args;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3V0aWwvbGliL3BsYXRmb3JtLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJPQUtNLFNBQVUsSUFBVixDQUFrQixHQUFsQixFQUF3QjtBQUM1QixXQUFPLE9BQU8sSUFBUCxDQUFZLEdBQVosQ0FBUDtBQUNEO0FBRUQsT0FBTSxTQUFVLE1BQVYsQ0FBb0IsR0FBcEIsRUFBaUM7QUFDckMsUUFBSSxRQUFRLElBQVIsSUFBZ0IsUUFBUSxTQUE1QixFQUF1QyxNQUFNLElBQUksS0FBSixDQUFVLDhCQUFWLENBQU47QUFDdkMsV0FBTyxHQUFQO0FBQ0Q7QUFFRCxPQUFNLFNBQVUsTUFBVixDQUFvQixHQUFwQixFQUFtQyxPQUFuQyxFQUFrRDtBQUN0RCxRQUFJLFFBQVEsSUFBUixJQUFnQixRQUFRLFNBQTVCLEVBQXVDLE1BQU0sSUFBSSxLQUFKLENBQVUsT0FBVixDQUFOO0FBQ3ZDLFdBQU8sR0FBUDtBQUNEO0FBRUQsT0FBTSxTQUFVLFdBQVYsQ0FBc0IsVUFBVSxhQUFoQyxFQUE2QztBQUNqRCxXQUFPLElBQUksS0FBSixDQUFVLE9BQVYsQ0FBUDtBQUNEO0FBRUQsT0FBTSxTQUFVLFNBQVYsQ0FBb0IsS0FBcEIsRUFBZ0M7QUFDcEMsVUFBTSxJQUFJLEtBQUosQ0FBVSxhQUFhLEtBQUssRUFBNUIsQ0FBTjtBQUNEO0FBSUQsT0FBTyxNQUFNLFFBQVEsQ0FBa0IsR0FBRyxJQUFyQixLQUFpQyxJQUEvQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIE9wdGlvbjxUPiA9IFQgfCBudWxsO1xuZXhwb3J0IHR5cGUgTWF5YmU8VD4gPSBPcHRpb248VD4gfCB1bmRlZmluZWQgfCB2b2lkO1xuXG5leHBvcnQgdHlwZSBGYWN0b3J5PFQ+ID0gbmV3ICguLi5hcmdzOiB1bmtub3duW10pID0+IFQ7XG5cbmV4cG9ydCBmdW5jdGlvbiBrZXlzPFQ+KG9iajogVCk6IEFycmF5PGtleW9mIFQ+IHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikgYXMgQXJyYXk8a2V5b2YgVD47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1bndyYXA8VD4odmFsOiBNYXliZTxUPik6IFQge1xuICBpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIHZhbHVlIHRvIGJlIHByZXNlbnRgKTtcbiAgcmV0dXJuIHZhbCBhcyBUO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhwZWN0PFQ+KHZhbDogTWF5YmU8VD4sIG1lc3NhZ2U6IHN0cmluZyk6IFQge1xuICBpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIHJldHVybiB2YWwgYXMgVDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVucmVhY2hhYmxlKG1lc3NhZ2UgPSAndW5yZWFjaGFibGUnKTogRXJyb3Ige1xuICByZXR1cm4gbmV3IEVycm9yKG1lc3NhZ2UpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhoYXVzdGVkKHZhbHVlOiBuZXZlcik6IG5ldmVyIHtcbiAgdGhyb3cgbmV3IEVycm9yKGBFeGhhdXN0ZWQgJHt2YWx1ZX1gKTtcbn1cblxuZXhwb3J0IHR5cGUgTGl0ID0gc3RyaW5nIHwgbnVtYmVyIHwgYm9vbGVhbiB8IHVuZGVmaW5lZCB8IG51bGwgfCB2b2lkIHwge307XG5cbmV4cG9ydCBjb25zdCB0dXBsZSA9IDxUIGV4dGVuZHMgTGl0W10+KC4uLmFyZ3M6IFQpID0+IGFyZ3M7XG4iXSwic291cmNlUm9vdCI6IiJ9