var objKeys = Object.keys;
export function assign(obj) {
  for (var i = 1; i < arguments.length; i++) {
    var assignment = arguments[i];
    if (assignment === null || typeof assignment !== 'object') continue;
    var keys = objKeys(assignment);

    for (var j = 0; j < keys.length; j++) {
      var key = keys[j];
      obj[key] = assignment[key];
    }
  }

  return obj;
}
export function fillNulls(count) {
  var arr = new Array(count);

  for (var i = 0; i < count; i++) {
    arr[i] = null;
  }

  return arr;
}
export function values(obj) {
  var vals = [];

  for (var key in obj) {
    vals.push(obj[key]);
  }

  return vals;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3V0aWwvbGliL29iamVjdC11dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiSUFBYyxPLEdBQWQsTSxDQUFRLEk7QUF3QlIsT0FBTSxTQUFBLE1BQUEsQ0FBQSxHQUFBLEVBQXlCO0FBQzdCLE9BQUssSUFBSSxDQUFDLEdBQVYsQ0FBQSxFQUFnQixDQUFDLEdBQUcsU0FBUyxDQUE3QixNQUFBLEVBQXNDLENBQXRDLEVBQUEsRUFBMkM7QUFDekMsUUFBSSxVQUFVLEdBQUcsU0FBUyxDQUExQixDQUEwQixDQUExQjtBQUNBLFFBQUksVUFBVSxLQUFWLElBQUEsSUFBdUIsT0FBQSxVQUFBLEtBQTNCLFFBQUEsRUFBMkQ7QUFDM0QsUUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFsQixVQUFrQixDQUFsQjs7QUFDQSxTQUFLLElBQUksQ0FBQyxHQUFWLENBQUEsRUFBZ0IsQ0FBQyxHQUFHLElBQUksQ0FBeEIsTUFBQSxFQUFpQyxDQUFqQyxFQUFBLEVBQXNDO0FBQ3BDLFVBQUksR0FBRyxHQUFHLElBQUksQ0FBZCxDQUFjLENBQWQ7QUFDQSxNQUFBLEdBQUcsQ0FBSCxHQUFHLENBQUgsR0FBVyxVQUFVLENBQXJCLEdBQXFCLENBQXJCO0FBQ0Q7QUFDRjs7QUFDRCxTQUFBLEdBQUE7QUFDRDtBQUVELE9BQU0sU0FBQSxTQUFBLENBQUEsS0FBQSxFQUFvQztBQUN4QyxNQUFJLEdBQUcsR0FBRyxJQUFBLEtBQUEsQ0FBVixLQUFVLENBQVY7O0FBRUEsT0FBSyxJQUFJLENBQUMsR0FBVixDQUFBLEVBQWdCLENBQUMsR0FBakIsS0FBQSxFQUEyQixDQUEzQixFQUFBLEVBQWdDO0FBQzlCLElBQUEsR0FBRyxDQUFILENBQUcsQ0FBSCxHQUFBLElBQUE7QUFDRDs7QUFFRCxTQUFBLEdBQUE7QUFDRDtBQUVELE9BQU0sU0FBQSxNQUFBLENBQUEsR0FBQSxFQUEyQztBQUMvQyxNQUFNLElBQUksR0FBVixFQUFBOztBQUNBLE9BQUssSUFBTCxHQUFBLElBQUEsR0FBQSxFQUF1QjtBQUNyQixJQUFBLElBQUksQ0FBSixJQUFBLENBQVUsR0FBRyxDQUFiLEdBQWEsQ0FBYjtBQUNEOztBQUNELFNBQUEsSUFBQTtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBrZXlzOiBvYmpLZXlzIH0gPSBPYmplY3Q7XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NpZ248VCwgVT4ob2JqOiBULCBhc3NpZ25tZW50czogVSk6IFQgJiBVO1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2lnbjxULCBVLCBWPihvYmo6IFQsIGE6IFUsIGI6IFYpOiBUICYgVSAmIFY7XG5leHBvcnQgZnVuY3Rpb24gYXNzaWduPFQsIFUsIFYsIFc+KG9iajogVCwgYTogVSwgYjogViwgYzogVyk6IFQgJiBVICYgViAmIFc7XG5leHBvcnQgZnVuY3Rpb24gYXNzaWduPFQsIFUsIFYsIFcsIFg+KG9iajogVCwgYTogVSwgYjogViwgYzogVywgZDogWCk6IFQgJiBVICYgViAmIFcgJiBYO1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2lnbjxULCBVLCBWLCBXLCBYLCBZPihcbiAgb2JqOiBULFxuICBhOiBVLFxuICBiOiBWLFxuICBjOiBXLFxuICBkOiBYLFxuICBlOiBZXG4pOiBUICYgVSAmIFYgJiBXICYgWCAmIFk7XG5leHBvcnQgZnVuY3Rpb24gYXNzaWduPFQsIFUsIFYsIFcsIFgsIFksIFo+KFxuICBvYmo6IFQsXG4gIGE6IFUsXG4gIGI6IFYsXG4gIGM6IFcsXG4gIGQ6IFgsXG4gIGU6IFksXG4gIGY6IFpcbik6IFQgJiBVICYgViAmIFcgJiBYICYgWSAmIFo7XG5leHBvcnQgZnVuY3Rpb24gYXNzaWduKHRhcmdldDogYW55LCAuLi5hcmdzOiBhbnlbXSk6IGFueTtcbmV4cG9ydCBmdW5jdGlvbiBhc3NpZ24ob2JqOiBhbnkpIHtcbiAgZm9yIChsZXQgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICBsZXQgYXNzaWdubWVudCA9IGFyZ3VtZW50c1tpXTtcbiAgICBpZiAoYXNzaWdubWVudCA9PT0gbnVsbCB8fCB0eXBlb2YgYXNzaWdubWVudCAhPT0gJ29iamVjdCcpIGNvbnRpbnVlO1xuICAgIGxldCBrZXlzID0gb2JqS2V5cyhhc3NpZ25tZW50KTtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGtleXMubGVuZ3RoOyBqKyspIHtcbiAgICAgIGxldCBrZXkgPSBrZXlzW2pdO1xuICAgICAgb2JqW2tleV0gPSBhc3NpZ25tZW50W2tleV07XG4gICAgfVxuICB9XG4gIHJldHVybiBvYmo7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWxsTnVsbHM8VD4oY291bnQ6IG51bWJlcik6IFRbXSB7XG4gIGxldCBhcnIgPSBuZXcgQXJyYXkoY291bnQpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuICAgIGFycltpXSA9IG51bGw7XG4gIH1cblxuICByZXR1cm4gYXJyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsdWVzPFQ+KG9iajogeyBbczogc3RyaW5nXTogVCB9KTogVFtdIHtcbiAgY29uc3QgdmFscyA9IFtdO1xuICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICB2YWxzLnB1c2gob2JqW2tleV0pO1xuICB9XG4gIHJldHVybiB2YWxzO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==