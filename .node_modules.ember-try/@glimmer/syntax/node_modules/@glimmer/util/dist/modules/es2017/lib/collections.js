import { ensureGuid } from './guid';
export function dict() {
  return Object.create(null);
}
export function isDict(u) {
  return u !== null && u !== undefined;
}
export function isObject(u) {
  return typeof u === 'object' && u !== null;
}
export class DictSet {
  constructor() {
    this.dict = dict();
  }

  add(obj) {
    if (typeof obj === 'string') this.dict[obj] = obj;else this.dict[ensureGuid(obj)] = obj;
    return this;
  }

  delete(obj) {
    if (typeof obj === 'string') delete this.dict[obj];else if (obj._guid) delete this.dict[obj._guid];
  }

}
export class StackImpl {
  constructor() {
    this.stack = [];
    this.current = null;
  }

  get size() {
    return this.stack.length;
  }

  push(item) {
    this.current = item;
    this.stack.push(item);
  }

  pop() {
    let item = this.stack.pop();
    let len = this.stack.length;
    this.current = len === 0 ? null : this.stack[len - 1];
    return item === undefined ? null : item;
  }

  nth(from) {
    let len = this.stack.length;
    return len < from ? null : this.stack[len - from];
  }

  isEmpty() {
    return this.stack.length === 0;
  }

  toArray() {
    return this.stack;
  }

}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3V0aWwvbGliL2NvbGxlY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQWtCLFVBQWxCLFFBQW9DLFFBQXBDO0FBU0EsT0FBTSxTQUFVLElBQVYsR0FBYztBQUNsQixTQUFPLE1BQU0sQ0FBQyxNQUFQLENBQWMsSUFBZCxDQUFQO0FBQ0Q7QUFFRCxPQUFNLFNBQVUsTUFBVixDQUFvQixDQUFwQixFQUF3QjtBQUM1QixTQUFPLENBQUMsS0FBSyxJQUFOLElBQWMsQ0FBQyxLQUFLLFNBQTNCO0FBQ0Q7QUFFRCxPQUFNLFNBQVUsUUFBVixDQUFzQixDQUF0QixFQUEwQjtBQUM5QixTQUFPLE9BQU8sQ0FBUCxLQUFhLFFBQWIsSUFBeUIsQ0FBQyxLQUFLLElBQXRDO0FBQ0Q7QUFJRCxPQUFNLE1BQU8sT0FBUCxDQUFjO0FBR2xCLEVBQUEsV0FBQSxHQUFBO0FBQ0UsU0FBSyxJQUFMLEdBQVksSUFBSSxFQUFoQjtBQUNEOztBQUVELEVBQUEsR0FBRyxDQUFDLEdBQUQsRUFBTztBQUNSLFFBQUksT0FBTyxHQUFQLEtBQWUsUUFBbkIsRUFBNkIsS0FBSyxJQUFMLENBQVUsR0FBVixJQUF3QixHQUF4QixDQUE3QixLQUNLLEtBQUssSUFBTCxDQUFVLFVBQVUsQ0FBQyxHQUFELENBQXBCLElBQW9DLEdBQXBDO0FBQ0wsV0FBTyxJQUFQO0FBQ0Q7O0FBRUQsRUFBQSxNQUFNLENBQUMsR0FBRCxFQUFPO0FBQ1gsUUFBSSxPQUFPLEdBQVAsS0FBZSxRQUFuQixFQUE2QixPQUFPLEtBQUssSUFBTCxDQUFVLEdBQVYsQ0FBUCxDQUE3QixLQUNLLElBQUssR0FBVyxDQUFDLEtBQWpCLEVBQXdCLE9BQU8sS0FBSyxJQUFMLENBQVcsR0FBVyxDQUFDLEtBQXZCLENBQVA7QUFDOUI7O0FBaEJpQjtBQW1CcEIsT0FBTSxNQUFPLFNBQVAsQ0FBZ0I7QUFBdEIsRUFBQSxXQUFBLEdBQUE7QUFDVSxTQUFBLEtBQUEsR0FBYSxFQUFiO0FBQ0QsU0FBQSxPQUFBLEdBQXFCLElBQXJCO0FBK0JSOztBQTdCQyxNQUFXLElBQVgsR0FBZTtBQUNiLFdBQU8sS0FBSyxLQUFMLENBQVcsTUFBbEI7QUFDRDs7QUFFRCxFQUFBLElBQUksQ0FBQyxJQUFELEVBQVE7QUFDVixTQUFLLE9BQUwsR0FBZSxJQUFmO0FBQ0EsU0FBSyxLQUFMLENBQVcsSUFBWCxDQUFnQixJQUFoQjtBQUNEOztBQUVELEVBQUEsR0FBRyxHQUFBO0FBQ0QsUUFBSSxJQUFJLEdBQUcsS0FBSyxLQUFMLENBQVcsR0FBWCxFQUFYO0FBQ0EsUUFBSSxHQUFHLEdBQUcsS0FBSyxLQUFMLENBQVcsTUFBckI7QUFDQSxTQUFLLE9BQUwsR0FBZSxHQUFHLEtBQUssQ0FBUixHQUFZLElBQVosR0FBbUIsS0FBSyxLQUFMLENBQVcsR0FBRyxHQUFHLENBQWpCLENBQWxDO0FBRUEsV0FBTyxJQUFJLEtBQUssU0FBVCxHQUFxQixJQUFyQixHQUE0QixJQUFuQztBQUNEOztBQUVELEVBQUEsR0FBRyxDQUFDLElBQUQsRUFBYTtBQUNkLFFBQUksR0FBRyxHQUFHLEtBQUssS0FBTCxDQUFXLE1BQXJCO0FBQ0EsV0FBTyxHQUFHLEdBQUcsSUFBTixHQUFhLElBQWIsR0FBb0IsS0FBSyxLQUFMLENBQVcsR0FBRyxHQUFHLElBQWpCLENBQTNCO0FBQ0Q7O0FBRUQsRUFBQSxPQUFPLEdBQUE7QUFDTCxXQUFPLEtBQUssS0FBTCxDQUFXLE1BQVgsS0FBc0IsQ0FBN0I7QUFDRDs7QUFFRCxFQUFBLE9BQU8sR0FBQTtBQUNMLFdBQU8sS0FBSyxLQUFaO0FBQ0Q7O0FBaENtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhhc0d1aWQsIGVuc3VyZUd1aWQgfSBmcm9tICcuL2d1aWQnO1xuaW1wb3J0IHsgT3B0aW9uIH0gZnJvbSAnLi9wbGF0Zm9ybS11dGlscyc7XG5pbXBvcnQgeyBEaWN0LCBTdGFjayB9IGZyb20gJ0BnbGltbWVyL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNldDxUPiB7XG4gIGFkZCh2YWx1ZTogVCk6IFNldDxUPjtcbiAgZGVsZXRlKHZhbHVlOiBUKTogdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpY3Q8VCA9IHVua25vd24+KCk6IERpY3Q8VD4ge1xuICByZXR1cm4gT2JqZWN0LmNyZWF0ZShudWxsKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRGljdDxUPih1OiBUKTogdSBpcyBEaWN0ICYgVCB7XG4gIHJldHVybiB1ICE9PSBudWxsICYmIHUgIT09IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0PFQ+KHU6IFQpOiB1IGlzIG9iamVjdCAmIFQge1xuICByZXR1cm4gdHlwZW9mIHUgPT09ICdvYmplY3QnICYmIHUgIT09IG51bGw7XG59XG5cbmV4cG9ydCB0eXBlIFNldE1lbWJlciA9IEhhc0d1aWQgfCBzdHJpbmc7XG5cbmV4cG9ydCBjbGFzcyBEaWN0U2V0PFQgZXh0ZW5kcyBTZXRNZW1iZXI+IGltcGxlbWVudHMgU2V0PFQ+IHtcbiAgcHJpdmF0ZSBkaWN0OiBEaWN0PFQ+O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZGljdCA9IGRpY3Q8VD4oKTtcbiAgfVxuXG4gIGFkZChvYmo6IFQpOiBTZXQ8VD4ge1xuICAgIGlmICh0eXBlb2Ygb2JqID09PSAnc3RyaW5nJykgdGhpcy5kaWN0W29iaiBhcyBhbnldID0gb2JqO1xuICAgIGVsc2UgdGhpcy5kaWN0W2Vuc3VyZUd1aWQob2JqIGFzIGFueSldID0gb2JqO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZGVsZXRlKG9iajogVCkge1xuICAgIGlmICh0eXBlb2Ygb2JqID09PSAnc3RyaW5nJykgZGVsZXRlIHRoaXMuZGljdFtvYmogYXMgYW55XTtcbiAgICBlbHNlIGlmICgob2JqIGFzIGFueSkuX2d1aWQpIGRlbGV0ZSB0aGlzLmRpY3RbKG9iaiBhcyBhbnkpLl9ndWlkXTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3RhY2tJbXBsPFQ+IGltcGxlbWVudHMgU3RhY2s8VD4ge1xuICBwcml2YXRlIHN0YWNrOiBUW10gPSBbXTtcbiAgcHVibGljIGN1cnJlbnQ6IE9wdGlvbjxUPiA9IG51bGw7XG5cbiAgcHVibGljIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLnN0YWNrLmxlbmd0aDtcbiAgfVxuXG4gIHB1c2goaXRlbTogVCkge1xuICAgIHRoaXMuY3VycmVudCA9IGl0ZW07XG4gICAgdGhpcy5zdGFjay5wdXNoKGl0ZW0pO1xuICB9XG5cbiAgcG9wKCk6IE9wdGlvbjxUPiB7XG4gICAgbGV0IGl0ZW0gPSB0aGlzLnN0YWNrLnBvcCgpO1xuICAgIGxldCBsZW4gPSB0aGlzLnN0YWNrLmxlbmd0aDtcbiAgICB0aGlzLmN1cnJlbnQgPSBsZW4gPT09IDAgPyBudWxsIDogdGhpcy5zdGFja1tsZW4gLSAxXTtcblxuICAgIHJldHVybiBpdGVtID09PSB1bmRlZmluZWQgPyBudWxsIDogaXRlbTtcbiAgfVxuXG4gIG50aChmcm9tOiBudW1iZXIpOiBPcHRpb248VD4ge1xuICAgIGxldCBsZW4gPSB0aGlzLnN0YWNrLmxlbmd0aDtcbiAgICByZXR1cm4gbGVuIDwgZnJvbSA/IG51bGwgOiB0aGlzLnN0YWNrW2xlbiAtIGZyb21dO1xuICB9XG5cbiAgaXNFbXB0eSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zdGFjay5sZW5ndGggPT09IDA7XG4gIH1cblxuICB0b0FycmF5KCk6IFRbXSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhY2s7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=