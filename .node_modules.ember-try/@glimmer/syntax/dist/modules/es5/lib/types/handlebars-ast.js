/**
 * @module
 *
 * This file contains types for the raw AST returned from the Handlebars parser.
 * These types were originally imported from
 * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/handlebars/index.d.ts.
 */
export {};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3N5bnRheC9saWIvdHlwZXMvaGFuZGxlYmFycy1hc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGVcbiAqXG4gKiBUaGlzIGZpbGUgY29udGFpbnMgdHlwZXMgZm9yIHRoZSByYXcgQVNUIHJldHVybmVkIGZyb20gdGhlIEhhbmRsZWJhcnMgcGFyc2VyLlxuICogVGhlc2UgdHlwZXMgd2VyZSBvcmlnaW5hbGx5IGltcG9ydGVkIGZyb21cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZWZpbml0ZWx5VHlwZWQvRGVmaW5pdGVseVR5cGVkL2Jsb2IvbWFzdGVyL3R5cGVzL2hhbmRsZWJhcnMvaW5kZXguZC50cy5cbiAqL1xuXG5pbXBvcnQgKiBhcyBBU1QgZnJvbSAnLi9ub2Rlcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29tbW9uTm9kZSB7XG4gIGxvYzogU291cmNlTG9jYXRpb247XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTm9kZU1hcCB7XG4gIFByb2dyYW06IHsgaW5wdXQ6IFByb2dyYW07IG91dHB1dDogQVNULlRlbXBsYXRlIHwgQVNULkJsb2NrIH07XG4gIE11c3RhY2hlU3RhdGVtZW50OiB7IGlucHV0OiBNdXN0YWNoZVN0YXRlbWVudDsgb3V0cHV0OiBBU1QuTXVzdGFjaGVTdGF0ZW1lbnQgfCB2b2lkIH07XG4gIERlY29yYXRvcjogeyBpbnB1dDogRGVjb3JhdG9yOyBvdXRwdXQ6IG5ldmVyIH07XG4gIEJsb2NrU3RhdGVtZW50OiB7IGlucHV0OiBCbG9ja1N0YXRlbWVudDsgb3V0cHV0OiBBU1QuQmxvY2tTdGF0ZW1lbnQgfCB2b2lkIH07XG4gIERlY29yYXRvckJsb2NrOiB7IGlucHV0OiBEZWNvcmF0b3JCbG9jazsgb3V0cHV0OiBuZXZlciB9O1xuICBQYXJ0aWFsU3RhdGVtZW50OiB7IGlucHV0OiBQYXJ0aWFsU3RhdGVtZW50OyBvdXRwdXQ6IG5ldmVyIH07XG4gIFBhcnRpYWxCbG9ja1N0YXRlbWVudDogeyBpbnB1dDogUGFydGlhbEJsb2NrU3RhdGVtZW50OyBvdXRwdXQ6IG5ldmVyIH07XG4gIENvbnRlbnRTdGF0ZW1lbnQ6IHsgaW5wdXQ6IENvbnRlbnRTdGF0ZW1lbnQ7IG91dHB1dDogdm9pZCB9O1xuICBDb21tZW50U3RhdGVtZW50OiB7IGlucHV0OiBDb21tZW50U3RhdGVtZW50OyBvdXRwdXQ6IEFTVC5NdXN0YWNoZUNvbW1lbnRTdGF0ZW1lbnQgfCBudWxsIH07XG4gIFN1YkV4cHJlc3Npb246IHsgaW5wdXQ6IFN1YkV4cHJlc3Npb247IG91dHB1dDogQVNULlN1YkV4cHJlc3Npb24gfTtcbiAgUGF0aEV4cHJlc3Npb246IHsgaW5wdXQ6IFBhdGhFeHByZXNzaW9uOyBvdXRwdXQ6IEFTVC5QYXRoRXhwcmVzc2lvbiB9O1xuICBTdHJpbmdMaXRlcmFsOiB7IGlucHV0OiBTdHJpbmdMaXRlcmFsOyBvdXRwdXQ6IEFTVC5TdHJpbmdMaXRlcmFsIH07XG4gIEJvb2xlYW5MaXRlcmFsOiB7IGlucHV0OiBCb29sZWFuTGl0ZXJhbDsgb3V0cHV0OiBBU1QuQm9vbGVhbkxpdGVyYWwgfTtcbiAgTnVtYmVyTGl0ZXJhbDogeyBpbnB1dDogTnVtYmVyTGl0ZXJhbDsgb3V0cHV0OiBBU1QuTnVtYmVyTGl0ZXJhbCB9O1xuICBVbmRlZmluZWRMaXRlcmFsOiB7IGlucHV0OiBVbmRlZmluZWRMaXRlcmFsOyBvdXRwdXQ6IEFTVC5VbmRlZmluZWRMaXRlcmFsIH07XG4gIE51bGxMaXRlcmFsOiB7IGlucHV0OiBOdWxsTGl0ZXJhbDsgb3V0cHV0OiBBU1QuTnVsbExpdGVyYWwgfTtcbn1cblxuZXhwb3J0IHR5cGUgTm9kZVR5cGUgPSBrZXlvZiBOb2RlTWFwO1xuZXhwb3J0IHR5cGUgTm9kZTxUIGV4dGVuZHMgTm9kZVR5cGUgPSBOb2RlVHlwZT4gPSBOb2RlTWFwW1RdWydpbnB1dCddO1xuXG5leHBvcnQgdHlwZSBPdXRwdXQ8VCBleHRlbmRzIE5vZGVUeXBlPiA9IE5vZGVNYXBbVF1bJ291dHB1dCddO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNvdXJjZUxvY2F0aW9uIHtcbiAgc291cmNlOiBzdHJpbmc7XG4gIHN0YXJ0OiBQb3NpdGlvbjtcbiAgZW5kOiBQb3NpdGlvbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQb3NpdGlvbiB7XG4gIGxpbmU6IG51bWJlcjtcbiAgY29sdW1uOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvZ3JhbSBleHRlbmRzIENvbW1vbk5vZGUge1xuICB0eXBlOiAnUHJvZ3JhbSc7XG4gIGJvZHk6IFN0YXRlbWVudFtdO1xuICBibG9ja1BhcmFtczogc3RyaW5nW107XG4gIGNoYWluZWQ/OiBib29sZWFuO1xufVxuXG5leHBvcnQgdHlwZSBTdGF0ZW1lbnQgPVxuICB8IE11c3RhY2hlU3RhdGVtZW50XG4gIHwgQmxvY2tTdGF0ZW1lbnRcbiAgfCBEZWNvcmF0b3JCbG9ja1xuICB8IFBhcnRpYWxTdGF0ZW1lbnRcbiAgfCBQYXJ0aWFsQmxvY2tTdGF0ZW1lbnRcbiAgfCBDb250ZW50U3RhdGVtZW50XG4gIHwgQ29tbWVudFN0YXRlbWVudDtcblxuZXhwb3J0IGludGVyZmFjZSBDb21tb25NdXN0YWNoZSBleHRlbmRzIENvbW1vbk5vZGUge1xuICBwYXRoOiBQYXRoRXhwcmVzc2lvbiB8IExpdGVyYWw7XG4gIHBhcmFtczogRXhwcmVzc2lvbltdO1xuICBoYXNoOiBIYXNoO1xuICBlc2NhcGVkOiBib29sZWFuO1xuICBzdHJpcDogU3RyaXBGbGFncztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNdXN0YWNoZVN0YXRlbWVudCBleHRlbmRzIENvbW1vbk11c3RhY2hlIHtcbiAgdHlwZTogJ011c3RhY2hlU3RhdGVtZW50Jztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBEZWNvcmF0b3IgZXh0ZW5kcyBDb21tb25NdXN0YWNoZSB7XG4gIHR5cGU6ICdEZWNvcmF0b3JTdGF0ZW1lbnQnO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbW1vbkJsb2NrIGV4dGVuZHMgQ29tbW9uTm9kZSB7XG4gIGNoYWluZWQ6IGJvb2xlYW47XG4gIHBhdGg6IFBhdGhFeHByZXNzaW9uO1xuICBwYXJhbXM6IEV4cHJlc3Npb25bXTtcbiAgaGFzaDogSGFzaDtcbiAgcHJvZ3JhbTogUHJvZ3JhbTtcbiAgaW52ZXJzZTogUHJvZ3JhbTtcbiAgb3BlblN0cmlwOiBTdHJpcEZsYWdzO1xuICBpbnZlcnNlU3RyaXA6IFN0cmlwRmxhZ3M7XG4gIGNsb3NlU3RyaXA6IFN0cmlwRmxhZ3M7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmxvY2tTdGF0ZW1lbnQgZXh0ZW5kcyBDb21tb25CbG9jayB7XG4gIHR5cGU6ICdCbG9ja1N0YXRlbWVudCc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVjb3JhdG9yQmxvY2sgZXh0ZW5kcyBDb21tb25CbG9jayB7XG4gIHR5cGU6ICdEZWNvcmF0b3JCbG9jayc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFydGlhbFN0YXRlbWVudCBleHRlbmRzIENvbW1vbk5vZGUge1xuICB0eXBlOiAnUGFydGlhbFN0YXRlbWVudCc7XG4gIG5hbWU6IFBhdGhFeHByZXNzaW9uIHwgU3ViRXhwcmVzc2lvbjtcbiAgcGFyYW1zOiBFeHByZXNzaW9uW107XG4gIGhhc2g6IEhhc2g7XG4gIGluZGVudDogc3RyaW5nO1xuICBzdHJpcDogU3RyaXBGbGFncztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQYXJ0aWFsQmxvY2tTdGF0ZW1lbnQgZXh0ZW5kcyBDb21tb25Ob2RlIHtcbiAgdHlwZTogJ1BhcnRpYWxCbG9ja1N0YXRlbWVudCc7XG4gIG5hbWU6IFBhdGhFeHByZXNzaW9uIHwgU3ViRXhwcmVzc2lvbjtcbiAgcGFyYW1zOiBFeHByZXNzaW9uW107XG4gIGhhc2g6IEhhc2g7XG4gIHByb2dyYW06IFByb2dyYW07XG4gIG9wZW5TdHJpcDogU3RyaXBGbGFncztcbiAgY2xvc2VTdHJpcDogU3RyaXBGbGFncztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb250ZW50U3RhdGVtZW50IGV4dGVuZHMgQ29tbW9uTm9kZSB7XG4gIHR5cGU6ICdDb250ZW50U3RhdGVtZW50JztcbiAgdmFsdWU6IHN0cmluZztcbiAgb3JpZ2luYWw6IFN0cmlwRmxhZ3M7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29tbWVudFN0YXRlbWVudCBleHRlbmRzIENvbW1vbk5vZGUge1xuICB0eXBlOiAnQ29tbWVudFN0YXRlbWVudCc7XG4gIHZhbHVlOiBzdHJpbmc7XG4gIHN0cmlwOiBTdHJpcEZsYWdzO1xufVxuXG5leHBvcnQgdHlwZSBFeHByZXNzaW9uID0gU3ViRXhwcmVzc2lvbiB8IFBhdGhFeHByZXNzaW9uIHwgTGl0ZXJhbDtcblxuZXhwb3J0IGludGVyZmFjZSBTdWJFeHByZXNzaW9uIGV4dGVuZHMgQ29tbW9uTm9kZSB7XG4gIHR5cGU6ICdTdWJFeHByZXNzaW9uJztcbiAgcGF0aDogUGF0aEV4cHJlc3Npb247XG4gIHBhcmFtczogRXhwcmVzc2lvbltdO1xuICBoYXNoOiBIYXNoO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBhdGhFeHByZXNzaW9uIGV4dGVuZHMgQ29tbW9uTm9kZSB7XG4gIHR5cGU6ICdQYXRoRXhwcmVzc2lvbic7XG4gIGRhdGE6IGJvb2xlYW47XG4gIGRlcHRoOiBudW1iZXI7XG4gIHBhcnRzOiBzdHJpbmdbXTtcbiAgb3JpZ2luYWw6IHN0cmluZztcbn1cblxuZXhwb3J0IHR5cGUgTGl0ZXJhbCA9XG4gIHwgU3RyaW5nTGl0ZXJhbFxuICB8IEJvb2xlYW5MaXRlcmFsXG4gIHwgTnVtYmVyTGl0ZXJhbFxuICB8IFVuZGVmaW5lZExpdGVyYWxcbiAgfCBOdWxsTGl0ZXJhbDtcblxuZXhwb3J0IGludGVyZmFjZSBTdHJpbmdMaXRlcmFsIGV4dGVuZHMgQ29tbW9uTm9kZSB7XG4gIHR5cGU6ICdTdHJpbmdMaXRlcmFsJztcbiAgdmFsdWU6IHN0cmluZztcbiAgb3JpZ2luYWw6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCb29sZWFuTGl0ZXJhbCBleHRlbmRzIENvbW1vbk5vZGUge1xuICB0eXBlOiAnQm9vbGVhbkxpdGVyYWwnO1xuICB2YWx1ZTogYm9vbGVhbjtcbiAgb3JpZ2luYWw6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTnVtYmVyTGl0ZXJhbCBleHRlbmRzIENvbW1vbk5vZGUge1xuICB0eXBlOiAnTnVtYmVyTGl0ZXJhbCc7XG4gIHZhbHVlOiBudW1iZXI7XG4gIG9yaWdpbmFsOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVW5kZWZpbmVkTGl0ZXJhbCBleHRlbmRzIENvbW1vbk5vZGUge1xuICB0eXBlOiAnVW5kZWZpbmVkTGl0ZXJhbCc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTnVsbExpdGVyYWwgZXh0ZW5kcyBDb21tb25Ob2RlIHtcbiAgdHlwZTogJ051bGxMaXRlcmFsJztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBIYXNoIGV4dGVuZHMgQ29tbW9uTm9kZSB7XG4gIHBhaXJzOiBIYXNoUGFpcltdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEhhc2hQYWlyIGV4dGVuZHMgQ29tbW9uTm9kZSB7XG4gIGtleTogc3RyaW5nO1xuICB2YWx1ZTogRXhwcmVzc2lvbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdHJpcEZsYWdzIHtcbiAgb3BlbjogYm9vbGVhbjtcbiAgY2xvc2U6IGJvb2xlYW47XG59XG4iXSwic291cmNlUm9vdCI6IiJ9