import { combine, createUpdatableTag, update } from '@glimmer/reference';
class DynamicVarReference {
    constructor(scope, nameRef) {
        this.scope = scope;
        this.nameRef = nameRef;
        let varTag = this.varTag = createUpdatableTag();
        this.tag = combine([nameRef.tag, varTag]);
    }
    value() {
        return this.getVar().value();
    }
    get(key) {
        return this.getVar().get(key);
    }
    getVar() {
        let name = String(this.nameRef.value());
        let ref = this.scope.get(name);
        update(this.varTag, ref.tag);
        return ref;
    }
}
function getDynamicVar(args, vm) {
    let scope = vm.dynamicScope();
    let nameRef = args.positional.at(0);
    return new DynamicVarReference(scope, nameRef);
}
export default getDynamicVar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3J1bnRpbWUvbGliL2hlbHBlcnMvZ2V0LWR5bmFtaWMtdmFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBSUUsT0FKRixFQUtFLGtCQUxGLEVBTUUsTUFORixRQU9PLG9CQVBQO0FBVUEsTUFBTSxtQkFBTixDQUF5QjtBQUl2QixnQkFBb0IsS0FBcEIsRUFBaUQsT0FBakQsRUFBZ0Y7QUFBNUQsYUFBQSxLQUFBLEdBQUEsS0FBQTtBQUE2QixhQUFBLE9BQUEsR0FBQSxPQUFBO0FBQy9DLFlBQUksU0FBVSxLQUFLLE1BQUwsR0FBYyxvQkFBNUI7QUFDQSxhQUFLLEdBQUwsR0FBVyxRQUFRLENBQUMsUUFBUSxHQUFULEVBQWMsTUFBZCxDQUFSLENBQVg7QUFDRDtBQUVELFlBQUs7QUFDSCxlQUFPLEtBQUssTUFBTCxHQUFjLEtBQWQsRUFBUDtBQUNEO0FBRUQsUUFBSSxHQUFKLEVBQWU7QUFDYixlQUFPLEtBQUssTUFBTCxHQUFjLEdBQWQsQ0FBa0IsR0FBbEIsQ0FBUDtBQUNEO0FBRU8sYUFBTTtBQUNaLFlBQUksT0FBTyxPQUFPLEtBQUssT0FBTCxDQUFhLEtBQWIsRUFBUCxDQUFYO0FBQ0EsWUFBSSxNQUFNLEtBQUssS0FBTCxDQUFXLEdBQVgsQ0FBZSxJQUFmLENBQVY7QUFFQSxlQUFPLEtBQUssTUFBWixFQUFvQixJQUFJLEdBQXhCO0FBRUEsZUFBTyxHQUFQO0FBQ0Q7QUF4QnNCO0FBMkJ6QixTQUFTLGFBQVQsQ0FBdUIsSUFBdkIsRUFBMEMsRUFBMUMsRUFBc0Q7QUFDcEQsUUFBSSxRQUFRLEdBQUcsWUFBSCxFQUFaO0FBQ0EsUUFBSSxVQUFVLEtBQUssVUFBTCxDQUFnQixFQUFoQixDQUFtQixDQUFuQixDQUFkO0FBRUEsV0FBTyxJQUFJLG1CQUFKLENBQXdCLEtBQXhCLEVBQStCLE9BQS9CLENBQVA7QUFDRDtBQUVELGVBQWUsYUFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFRhZyxcbiAgVXBkYXRhYmxlVGFnLFxuICBQYXRoUmVmZXJlbmNlLFxuICBjb21iaW5lLFxuICBjcmVhdGVVcGRhdGFibGVUYWcsXG4gIHVwZGF0ZSxcbn0gZnJvbSAnQGdsaW1tZXIvcmVmZXJlbmNlJztcbmltcG9ydCB7IER5bmFtaWNTY29wZSwgVk0gYXMgUHVibGljVk0sIFZNQXJndW1lbnRzLCBIZWxwZXIgfSBmcm9tICdAZ2xpbW1lci9pbnRlcmZhY2VzJztcblxuY2xhc3MgRHluYW1pY1ZhclJlZmVyZW5jZSBpbXBsZW1lbnRzIFBhdGhSZWZlcmVuY2U8dW5rbm93bj4ge1xuICBwdWJsaWMgdGFnOiBUYWc7XG4gIHByaXZhdGUgdmFyVGFnOiBVcGRhdGFibGVUYWc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzY29wZTogRHluYW1pY1Njb3BlLCBwcml2YXRlIG5hbWVSZWY6IFBhdGhSZWZlcmVuY2U8dW5rbm93bj4pIHtcbiAgICBsZXQgdmFyVGFnID0gKHRoaXMudmFyVGFnID0gY3JlYXRlVXBkYXRhYmxlVGFnKCkpO1xuICAgIHRoaXMudGFnID0gY29tYmluZShbbmFtZVJlZi50YWcsIHZhclRhZ10pO1xuICB9XG5cbiAgdmFsdWUoKTogdW5rbm93biB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0VmFyKCkudmFsdWUoKTtcbiAgfVxuXG4gIGdldChrZXk6IHN0cmluZyk6IFBhdGhSZWZlcmVuY2U8dW5rbm93bj4ge1xuICAgIHJldHVybiB0aGlzLmdldFZhcigpLmdldChrZXkpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRWYXIoKTogUGF0aFJlZmVyZW5jZTx1bmtub3duPiB7XG4gICAgbGV0IG5hbWUgPSBTdHJpbmcodGhpcy5uYW1lUmVmLnZhbHVlKCkpO1xuICAgIGxldCByZWYgPSB0aGlzLnNjb3BlLmdldChuYW1lKTtcblxuICAgIHVwZGF0ZSh0aGlzLnZhclRhZywgcmVmLnRhZyk7XG5cbiAgICByZXR1cm4gcmVmO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldER5bmFtaWNWYXIoYXJnczogVk1Bcmd1bWVudHMsIHZtOiBQdWJsaWNWTSk6IFBhdGhSZWZlcmVuY2U8dW5rbm93bj4ge1xuICBsZXQgc2NvcGUgPSB2bS5keW5hbWljU2NvcGUoKTtcbiAgbGV0IG5hbWVSZWYgPSBhcmdzLnBvc2l0aW9uYWwuYXQoMCk7XG5cbiAgcmV0dXJuIG5ldyBEeW5hbWljVmFyUmVmZXJlbmNlKHNjb3BlLCBuYW1lUmVmKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0RHluYW1pY1ZhciBhcyBIZWxwZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9