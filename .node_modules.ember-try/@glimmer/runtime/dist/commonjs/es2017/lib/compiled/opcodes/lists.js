'use strict';

var _reference = require('@glimmer/reference');

var _opcodes = require('../../opcodes');

class IterablePresenceReference {
    constructor(artifacts) {
        this.tag = artifacts.tag;
        this.artifacts = artifacts;
    }
    value() {
        return !this.artifacts.isEmpty();
    }
}
_opcodes.APPEND_OPCODES.add(73 /* PutIterator */, vm => {
    let stack = vm.stack;
    let listRef = stack.pop();
    let key = stack.pop();
    let iterable = vm.env.iterableFor(listRef, key.value());
    let iterator = new _reference.ReferenceIterator(iterable);
    stack.push(iterator);
    stack.push(new IterablePresenceReference(iterator.artifacts));
});
_opcodes.APPEND_OPCODES.add(71 /* EnterList */, (vm, { op1: relativeStart }) => {
    vm.enterList(relativeStart);
});
_opcodes.APPEND_OPCODES.add(72 /* ExitList */, vm => {
    vm.exitList();
});
_opcodes.APPEND_OPCODES.add(74 /* Iterate */, (vm, { op1: breaks }) => {
    let stack = vm.stack;
    let item = stack.peek().next();
    if (item) {
        let tryOpcode = vm.iterate(item.memo, item.value);
        vm.enterItem(item.key, tryOpcode);
    } else {
        vm.goto(breaks);
    }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3J1bnRpbWUvbGliL2NvbXBpbGVkL29wY29kZXMvbGlzdHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBOztBQUtBLE1BQUEseUJBQUEsQ0FBK0I7QUFJN0IsZ0JBQUEsU0FBQSxFQUF5QztBQUN2QyxhQUFBLEdBQUEsR0FBVyxVQUFYLEdBQUE7QUFDQSxhQUFBLFNBQUEsR0FBQSxTQUFBO0FBQ0Q7QUFFRCxZQUFLO0FBQ0gsZUFBTyxDQUFDLEtBQUEsU0FBQSxDQUFSLE9BQVEsRUFBUjtBQUNEO0FBWDRCO0FBYy9CLHdCQUFBLEdBQUEsQ0FBQSxFQUFBLENBQUEsaUJBQUEsRUFBbUMsTUFBSztBQUN0QyxRQUFJLFFBQVEsR0FBWixLQUFBO0FBQ0EsUUFBSSxVQUFnQixNQUFwQixHQUFvQixFQUFwQjtBQUNBLFFBQUksTUFBWSxNQUFoQixHQUFnQixFQUFoQjtBQUNBLFFBQUksV0FBVyxHQUFBLEdBQUEsQ0FBQSxXQUFBLENBQUEsT0FBQSxFQUE0QixJQUEzQyxLQUEyQyxFQUE1QixDQUFmO0FBQ0EsUUFBSSxXQUFXLElBQUEsNEJBQUEsQ0FBZixRQUFlLENBQWY7QUFFQSxVQUFBLElBQUEsQ0FBQSxRQUFBO0FBQ0EsVUFBQSxJQUFBLENBQVcsSUFBQSx5QkFBQSxDQUE4QixTQUF6QyxTQUFXLENBQVg7QUFSRixDQUFBO0FBV0Esd0JBQUEsR0FBQSxDQUFBLEVBQUEsQ0FBQSxlQUFBLEVBQWlDLENBQUEsRUFBQSxFQUFLLEVBQUUsS0FBUCxhQUFLLEVBQUwsS0FBK0I7QUFDOUQsT0FBQSxTQUFBLENBQUEsYUFBQTtBQURGLENBQUE7QUFJQSx3QkFBQSxHQUFBLENBQUEsRUFBQSxDQUFBLGNBQUEsRUFBZ0MsTUFBSztBQUNuQyxPQUFBLFFBQUE7QUFERixDQUFBO0FBSUEsd0JBQUEsR0FBQSxDQUFBLEVBQUEsQ0FBQSxhQUFBLEVBQStCLENBQUEsRUFBQSxFQUFLLEVBQUUsS0FBUCxNQUFLLEVBQUwsS0FBd0I7QUFDckQsUUFBSSxRQUFRLEdBQVosS0FBQTtBQUNBLFFBQUksT0FBYSxNQUFOLElBQU0sR0FBakIsSUFBaUIsRUFBakI7QUFFQSxRQUFBLElBQUEsRUFBVTtBQUNSLFlBQUksWUFBWSxHQUFBLE9BQUEsQ0FBVyxLQUFYLElBQUEsRUFBc0IsS0FBdEMsS0FBZ0IsQ0FBaEI7QUFDQSxXQUFBLFNBQUEsQ0FBYSxLQUFiLEdBQUEsRUFBQSxTQUFBO0FBRkYsS0FBQSxNQUdPO0FBQ0wsV0FBQSxJQUFBLENBQUEsTUFBQTtBQUNEO0FBVEgsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhdGlvbkFydGlmYWN0cywgUmVmZXJlbmNlLCBSZWZlcmVuY2VJdGVyYXRvciwgVGFnIH0gZnJvbSAnQGdsaW1tZXIvcmVmZXJlbmNlJztcbmltcG9ydCB7IEFQUEVORF9PUENPREVTIH0gZnJvbSAnLi4vLi4vb3Bjb2Rlcyc7XG5pbXBvcnQgeyBDaGVja1BhdGhSZWZlcmVuY2UgfSBmcm9tICcuLy1kZWJ1Zy1zdHJpcCc7XG5pbXBvcnQgeyBjaGVjaywgQ2hlY2tJbnN0YW5jZW9mIH0gZnJvbSAnQGdsaW1tZXIvZGVidWcnO1xuaW1wb3J0IHsgT3AgfSBmcm9tICdAZ2xpbW1lci9pbnRlcmZhY2VzJztcblxuY2xhc3MgSXRlcmFibGVQcmVzZW5jZVJlZmVyZW5jZSBpbXBsZW1lbnRzIFJlZmVyZW5jZTxib29sZWFuPiB7XG4gIHB1YmxpYyB0YWc6IFRhZztcbiAgcHJpdmF0ZSBhcnRpZmFjdHM6IEl0ZXJhdGlvbkFydGlmYWN0cztcblxuICBjb25zdHJ1Y3RvcihhcnRpZmFjdHM6IEl0ZXJhdGlvbkFydGlmYWN0cykge1xuICAgIHRoaXMudGFnID0gYXJ0aWZhY3RzLnRhZztcbiAgICB0aGlzLmFydGlmYWN0cyA9IGFydGlmYWN0cztcbiAgfVxuXG4gIHZhbHVlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhdGhpcy5hcnRpZmFjdHMuaXNFbXB0eSgpO1xuICB9XG59XG5cbkFQUEVORF9PUENPREVTLmFkZChPcC5QdXRJdGVyYXRvciwgdm0gPT4ge1xuICBsZXQgc3RhY2sgPSB2bS5zdGFjaztcbiAgbGV0IGxpc3RSZWYgPSBjaGVjayhzdGFjay5wb3AoKSwgQ2hlY2tQYXRoUmVmZXJlbmNlKTtcbiAgbGV0IGtleSA9IGNoZWNrKHN0YWNrLnBvcCgpLCBDaGVja1BhdGhSZWZlcmVuY2UpO1xuICBsZXQgaXRlcmFibGUgPSB2bS5lbnYuaXRlcmFibGVGb3IobGlzdFJlZiwga2V5LnZhbHVlKCkpO1xuICBsZXQgaXRlcmF0b3IgPSBuZXcgUmVmZXJlbmNlSXRlcmF0b3IoaXRlcmFibGUpO1xuXG4gIHN0YWNrLnB1c2goaXRlcmF0b3IpO1xuICBzdGFjay5wdXNoKG5ldyBJdGVyYWJsZVByZXNlbmNlUmVmZXJlbmNlKGl0ZXJhdG9yLmFydGlmYWN0cykpO1xufSk7XG5cbkFQUEVORF9PUENPREVTLmFkZChPcC5FbnRlckxpc3QsICh2bSwgeyBvcDE6IHJlbGF0aXZlU3RhcnQgfSkgPT4ge1xuICB2bS5lbnRlckxpc3QocmVsYXRpdmVTdGFydCk7XG59KTtcblxuQVBQRU5EX09QQ09ERVMuYWRkKE9wLkV4aXRMaXN0LCB2bSA9PiB7XG4gIHZtLmV4aXRMaXN0KCk7XG59KTtcblxuQVBQRU5EX09QQ09ERVMuYWRkKE9wLkl0ZXJhdGUsICh2bSwgeyBvcDE6IGJyZWFrcyB9KSA9PiB7XG4gIGxldCBzdGFjayA9IHZtLnN0YWNrO1xuICBsZXQgaXRlbSA9IGNoZWNrKHN0YWNrLnBlZWsoKSwgQ2hlY2tJbnN0YW5jZW9mKFJlZmVyZW5jZUl0ZXJhdG9yKSkubmV4dCgpO1xuXG4gIGlmIChpdGVtKSB7XG4gICAgbGV0IHRyeU9wY29kZSA9IHZtLml0ZXJhdGUoaXRlbS5tZW1vLCBpdGVtLnZhbHVlKTtcbiAgICB2bS5lbnRlckl0ZW0oaXRlbS5rZXksIHRyeU9wY29kZSk7XG4gIH0gZWxzZSB7XG4gICAgdm0uZ290byhicmVha3MpO1xuICB9XG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=