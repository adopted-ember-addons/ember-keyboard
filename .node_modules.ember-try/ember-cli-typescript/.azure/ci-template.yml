parameters:
  installCommand: 'yarn install'
  nodeTestCommand: 'yarn ci:test:node -R xunit -O output=node-tests.xml'
  nodeTestDisplayName: 'Node Tests'
  nodeTestExtraArgs: ''
  emberTestCommand: 'yarn ci:test:app -r xunit'
  emberTestDisplayName: 'Ember App Tests'
  runLint: false
  tsVersion: false
  emberCliVersion: false
  nodeVersion: '^8.12'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: ${{ parameters.nodeVersion }}
    displayName: 'Install Node.js'

  - script: |
      npm install -g yarn
    displayName: 'Setup global tools'

  - ${{ if not(eq(parameters.emberCliVersion, 'false')) }}:
      - script: yarn add -D ember-cli@${{ parameters.emberCliVersion }}
        displayName: 'Set up ember-cli: ${{ parameters.emberCliVersion }}'

  - ${{ if not(eq(parameters.tsVersion, 'false')) }}:
      - script: yarn add -D typescript@${{ parameters.tsVersion }}
        displayName: 'Set up typescript: ${{ parameters.tsVersion }}'

  - script: |
      ${{ parameters.installCommand }}
    displayName: 'Install Dependencies'

  - ${{ if eq(parameters.runLint, 'true') }}:
      - script: |
          yarn lint:js
        displayName: 'Lint JS/TS code'

  - script: |
      yarn ci:prepare
    displayName: 'Prepare CI environment'

  - script: |
      ${{ parameters.emberTestCommand }}
    displayName: ${{ parameters.emberTestDisplayName }}

  - script: |
      ${{ parameters.nodeTestCommand }} ${{ parameters.nodeTestExtraArgs }}
    displayName: ${{ parameters.nodeTestDisplayName }}

  - script: |
      echo " --- EMBER TESTS --- "
      cat ember-tests.xml
      echo " --- NODE TESTS --- "
      cat node-tests.xml
    displayName: 'Log test output files'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'jUnit'
      testResultsFiles: '*-tests.xml'
